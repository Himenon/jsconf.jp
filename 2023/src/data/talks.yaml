# 1
- uuid: mizchi-1
  date: day1
  startsAt: "13:00"
  endsAt: "13:30"
  room: B
  # # recordingUrl: ""
  title: TODO
  titleJa: TODO
  description: >-
    "TODO"
  descriptionJa: >-
    "TODO"
  spokenLanguage: ja
  slideLanguage: ja
  # sponsorIDs: [ xxx ]
  speakerIDs:
    - mizchi
# 2
- uuid: anirudh-sharma-1
  date: day1
  startsAt: "14:40"
  endsAt: "15:20"
  room: A
  # recordingUrl: ""
  title: "Web Internals: Mastering the JavaScript Engine"
  titleJa: "Web Internals: Mastering the JavaScript Engine"
  description: >-
    For every developer, it's really essential to understand the internals in order to be aware and write optimized code. With a whole existing and upcoming ecosystem of libraries and frameworks around JavaScript, the need for thorough understanding of code execution on the web becomes more relevant. This knowledge also helps you to better understand and distinguish technologies like WebAssembly from JavaScript.

    Attend this talk to get an in-depth overview of the JavaScript engine and learn how it can help you as a developer to write more optimized JavaScript code. You will learn how exactly your high-level code is converted to bytecode and then to the optimized machine code with the magic of the V8 engine.

    The key session highlights include:
    1. Intro to JS engines and the V8 engine evolution
    2. Abstract Syntax Tree (AST)
    3. Ignition, Bytecode and Turbofan
    4. Hidden classes and Inline caching
    5. Garbage collection
    6. Writing optimized code
  descriptionJa: >-
    For every developer, it's really essential to understand the internals in order to be aware and write optimized code. With a whole existing and upcoming ecosystem of libraries and frameworks around JavaScript, the need for thorough understanding of code execution on the web becomes more relevant. This knowledge also helps you to better understand and distinguish technologies like WebAssembly from JavaScript.

    Attend this talk to get an in-depth overview of the JavaScript engine and learn how it can help you as a developer to write more optimized JavaScript code. You will learn how exactly your high-level code is converted to bytecode and then to the optimized machine code with the magic of the V8 engine.

    The key session highlights include:
    1. Intro to JS engines and the V8 engine evolution
    2. Abstract Syntax Tree (AST)
    3. Ignition, Bytecode and Turbofan
    4. Hidden classes and Inline caching
    5. Garbage collection
    6. Writing optimized code
  spokenLanguage: en
  slideLanguage: en
  # sponsorIDs: [ xxx ]
  speakerIDs:
    - anirudh-sharma
# 3
- uuid: aakansha-1
  date: day1
  startsAt: "14:10"
  endsAt: "14:40"
  room: C
  # recordingUrl: ""
  title: Text Containers under the hood in Canvas
  titleJa: Text Containers under the hood in Canvas
  description: >-
    In this talk I will be diving into how text containers work under the hood in canvas and also share insights on how its built in (excalidraw.com⁠ - A virtual free Open-Source collaborative end-to-end encrypted canvas based editor for sketching hand-drawn like diagrams.
    When it comes to canvas, building text containers gets tricky as compared to svg where you could take advantage of CSS for making sure text doesn’t go out of the container.

    In canvas it works differently

    1. Little bit about architecture of an Element - how elements are structured, how text is tied to shape
    2. Cover about Hit box testing
    3. When typing a text area is rendered and with CSS we can make sure that text doesn’t overflow
    4. Once typed, when rendering in canvas, we need a word wrap algorithm to render the text correctly inside container
    5. Since we are running the algo to wrap the text correctly, on resizing it could be very expensive hence caching is needed.
    6. Calculating dimensions of word by rendering it on DOM vs using canvas.measureText -> huge impact on performance
    7. Perf tricks which can be applied
    8. Aligning the canvas with text editor
    9. Takeaways - audience will understand how text containers work internally in canvas and get a glimpse of how its implemented in Excalidraw
  descriptionJa: >-
    In this talk I will be diving into how text containers work under the hood in canvas and also share insights on how its built in (excalidraw.com⁠ - A virtual free Open-Source collaborative end-to-end encrypted canvas based editor for sketching hand-drawn like diagrams.
    When it comes to canvas, building text containers gets tricky as compared to svg where you could take advantage of CSS for making sure text doesn’t go out of the container.

    In canvas it works differently

    1. Little bit about architecture of an Element - how elements are structured, how text is tied to shape
    2. Cover about Hit box testing
    3. When typing a text area is rendered and with CSS we can make sure that text doesn’t overflow
    4. Once typed, when rendering in canvas, we need a word wrap algorithm to render the text correctly inside container
    5. Since we are running the algo to wrap the text correctly, on resizing it could be very expensive hence caching is needed.
    6. Calculating dimensions of word by rendering it on DOM vs using canvas.measureText -> huge impact on performance
    7. Perf tricks which can be applied
    8. Aligning the canvas with text editor
    9. Takeaways - audience will understand how text containers work internally in canvas and get a glimpse of how its implemented in Excalidraw
  spokenLanguage: en
  slideLanguage: en
  # sponsorIDs: [ xxx ]
  speakerIDs:
    - aakansha
# 4
- uuid: kenneth-rohde-christiansen-1
  date: day1
  startsAt: "14:10"
  endsAt: "14:40"
  room: A
  # recordingUrl: ""
  title: Beyond the Web of Today
  titleJa: Beyond the Web of Today
  description: >-
    At Intel we work on the forefront of innovation as our hardware roadmaps are defined years ahead of release. This means that we need to make sure that the web platform takes advantage of new hardware capabilities as they are released or shortly after. This ranges from enabling new form factors to taking advantage of hardware accelerators.

    In this talk we will discuss some of the new innovations that Intel is bringing to the web, such as WebNN, which enables access to fast neural network and machine learning capabilities; Web GPU and Compute Pressure, a new API enabling better user experience and bringing adaptive compute capabilities to the client, just like adaptive streaming has improved streaming use-cases by adapting to live network conditions.
  descriptionJa: >-
    At Intel we work on the forefront of innovation as our hardware roadmaps are defined years ahead of release. This means that we need to make sure that the web platform takes advantage of new hardware capabilities as they are released or shortly after. This ranges from enabling new form factors to taking advantage of hardware accelerators.

    In this talk we will discuss some of the new innovations that Intel is bringing to the web, such as WebNN, which enables access to fast neural network and machine learning capabilities; Web GPU and Compute Pressure, a new API enabling better user experience and bringing adaptive compute capabilities to the client, just like adaptive streaming has improved streaming use-cases by adapting to live network conditions.
  spokenLanguage: en
  slideLanguage: en
  # sponsorIDs: [ xxx ]
  speakerIDs:
    - kenneth-rohde-christiansen
# 5
- uuid: akfm-sato-1
  date: day1
  startsAt: "14:10"
  endsAt: "14:40"
  room: B
  # recordingUrl: ""
  title: Next.js App Router クライアントキャッシュの仕組み
  titleJa: Next.js App Router クライアントキャッシュの仕組み
  description: >-
    Next.js App Routerのクライアントキャッシュの仕組み・実装・課題について発表します。
  descriptionJa: >-
    Next.js App Routerのクライアントキャッシュの仕組み・実装・課題について発表します。
  spokenLanguage: ja
  slideLanguage: ja
  # sponsorIDs: [ xxx ]
  speakerIDs:
    - akfm-sato
# 6
- uuid: daiki-nishikawa-1
  date: day1
  startsAt: "11:25"
  endsAt: "11:55"
  room: B
  # recordingUrl: ""
  title: Deep dive into Biome
  titleJa: Deep dive into Biome
  description: >-
    Biome は、Rome を fork して始まった Web 開発に必要なツールチェーンを開発するプロジェクトです。現在は、JavaScript、TypeScript、JSON の formatter や linter を提供しており、Vercel の新規プロダクトにも利用されています。

    今回のトークでは、Biome の直近の開発体制やリリースを紹介しつつ、Rust で実装されている Biome の内部について詳しく解説します。コアコントリビューターの一人として、Rust でJavaScript に関するツールを作る面白さやコントリビュートを歓迎している雰囲気などを伝えられるトークをしたいと考えています。

    現時点で具体的に考えている発表内容は次の通りです。

    - Biome の直近の開発体制やリリースの紹介
        プロジェクトの governace をベースに開発体制について紹介します。直近のリリースの紹介に加えて、コアチーム内で進行中の実装 (CSSのサポートなど) の近況についても紹介します。
    - Biome の内部アーキテクチャの解説
        内部で利用されている CST (Concrete Syntax Tree) の特徴などについて紹介します。構文木は Rust の LSP (rust-analyzer) の実装で利用されている rowan をベースとしたものになっており、この点にも触れながら紹介するつもりです。
    - Biome での linter の実装例の紹介
        linter の実装方法について、簡単なルールを例に具体的なコードを紹介しながら解説します。

    <hr/>

    参考リンク

    - Biome: https://biomejs.dev/
    - Vercel のプロダクトで Biome が利用されているポスト：https://twitter.com/rauchg/status/1703177160943628660
    - Governance: https://github.com/biomejs/biome/blob/main/GOVERNANCE.md
  descriptionJa: >-
    Biome は、Rome を fork して始まった Web 開発に必要なツールチェーンを開発するプロジェクトです。現在は、JavaScript、TypeScript、JSON の formatter や linter を提供しており、Vercel の新規プロダクトにも利用されています。

    今回のトークでは、Biome の直近の開発体制やリリースを紹介しつつ、Rust で実装されている Biome の内部について詳しく解説します。コアコントリビューターの一人として、Rust でJavaScript に関するツールを作る面白さやコントリビュートを歓迎している雰囲気などを伝えられるトークをしたいと考えています。

    現時点で具体的に考えている発表内容は次の通りです。

    - Biome の直近の開発体制やリリースの紹介
        プロジェクトの governace をベースに開発体制について紹介します。直近のリリースの紹介に加えて、コアチーム内で進行中の実装 (CSSのサポートなど) の近況についても紹介します。
    - Biome の内部アーキテクチャの解説
        内部で利用されている CST (Concrete Syntax Tree) の特徴などについて紹介します。構文木は Rust の LSP (rust-analyzer) の実装で利用されている rowan をベースとしたものになっており、この点にも触れながら紹介するつもりです。
    - Biome での linter の実装例の紹介
        linter の実装方法について、簡単なルールを例に具体的なコードを紹介しながら解説します。

    <hr/>

    参考リンク

    - Biome: https://biomejs.dev/
    - Vercel のプロダクトで Biome が利用されているポスト：https://twitter.com/rauchg/status/1703177160943628660
    - Governance: https://github.com/biomejs/biome/blob/main/GOVERNANCE.md
  spokenLanguage: ja
  slideLanguage: ja
  # sponsorIDs: [ xxx ]
  speakerIDs:
    - daiki-nishikawa
# 7
- uuid: jon-zhang-1
  date: day1
  startsAt: "16:00"
  endsAt: "16:30"
  room: A
  # recordingUrl: ""
  title: "Unleash Your Product's Potential: A Beginner's Guide to Growth Engineering"
  titleJa: "Unleash Your Product's Potential: A Beginner's Guide to Growth Engineering"
  description: >-
    Join us on an exhilarating journey as we unravel the mysteries of growth engineering and answer burning questions like: "Why does Meta have a whole team dedicated to working on their sign-up flow?" "Does it really matter what color I make this button on my app?" and "What even is growth engineering?"

    Prepare to be captivated as we demystify the world of growth engineering and reveal the strategies behind attracting hordes of users to tech giants like Meta, Google, and Twitter. We'll dive deep into the realm of data-driven decision-making and show you how to fuel your product's growth using the power of analytics. From spotting growth opportunities and optimizing funnels to measuring success with the right metrics, we'll equip you with the tools to attract users, improve retention, and boost conversions.

    With enthralling real-world examples and captivating case studies, you'll discover how to run experiments, A/B tests, and data loops for continuous improvement. By the end of this talk, you'll walk away with a crystal-clear understanding of growth engineering, armed with practical tips and insights to ignite your journey towards sustainable product growth.

    Whether you're a beginner seeking to unlock the secrets of growth engineering or a seasoned pro aiming to level up your growth game, this session will empower you to unleash your product's full potential and achieve measurable, impactful growth. Get ready to embark on a thrilling adventure and propel your product to new heights!
  descriptionJa: >-
    Join us on an exhilarating journey as we unravel the mysteries of growth engineering and answer burning questions like: "Why does Meta have a whole team dedicated to working on their sign-up flow?" "Does it really matter what color I make this button on my app?" and "What even is growth engineering?"

    Prepare to be captivated as we demystify the world of growth engineering and reveal the strategies behind attracting hordes of users to tech giants like Meta, Google, and Twitter. We'll dive deep into the realm of data-driven decision-making and show you how to fuel your product's growth using the power of analytics. From spotting growth opportunities and optimizing funnels to measuring success with the right metrics, we'll equip you with the tools to attract users, improve retention, and boost conversions.

    With enthralling real-world examples and captivating case studies, you'll discover how to run experiments, A/B tests, and data loops for continuous improvement. By the end of this talk, you'll walk away with a crystal-clear understanding of growth engineering, armed with practical tips and insights to ignite your journey towards sustainable product growth.

    Whether you're a beginner seeking to unlock the secrets of growth engineering or a seasoned pro aiming to level up your growth game, this session will empower you to unleash your product's full potential and achieve measurable, impactful growth. Get ready to embark on a thrilling adventure and propel your product to new heights!
  spokenLanguage: en
  slideLanguage: en
  # sponsorIDs: [ xxx ]
  speakerIDs:
    - jon-zhang
# 8
- uuid: peter-eijgermans-1
  date: day1
  startsAt: "13:00"
  endsAt: "13:30"
  room: C
  # recordingUrl: ""
  title: "Micro frontends in Action!"
  titleJa: "Micro frontends in Action!"
  description: >-
    Microservices have gained significant popularity in recent years as organizations seek to overcome the limitations of monolithic backends.

    However, the challenges of 'monolithic frontends' persist for many companies.

    In this session, Peter Eijgermans delves into a growing trend that aims to break down front-end monoliths into smaller, more manageable pieces. This architectural approach not only enhances team effectiveness and efficiency but also unlocks new possibilities.

    Peter begins by sharing an engaging anecdote of his adventure with a rhinoceros in Nepal, drawing parallels with the concept of monoliths that need to be overcome before embracing micro frontends. The presentation then focuses on establishing a robust Micro Frontends architecture, providing attendees with valuable insights into best practices, determining when and why to utilize micro frontends, and taking the initial steps towards implementation.

    Moreover, Peter showcases strategies for converting a monolith into a micro frontend application, offering practical guidance and demonstrating real-world scenarios.

    One of the key aspects covered is establishing seamless communication between Micro Frontends, ensuring smooth collaboration and integration within the architecture.
  descriptionJa: >-
    Microservices have gained significant popularity in recent years as organizations seek to overcome the limitations of monolithic backends.

    However, the challenges of 'monolithic frontends' persist for many companies.

    In this session, Peter Eijgermans delves into a growing trend that aims to break down front-end monoliths into smaller, more manageable pieces. This architectural approach not only enhances team effectiveness and efficiency but also unlocks new possibilities.

    Peter begins by sharing an engaging anecdote of his adventure with a rhinoceros in Nepal, drawing parallels with the concept of monoliths that need to be overcome before embracing micro frontends. The presentation then focuses on establishing a robust Micro Frontends architecture, providing attendees with valuable insights into best practices, determining when and why to utilize micro frontends, and taking the initial steps towards implementation.

    Moreover, Peter showcases strategies for converting a monolith into a micro frontend application, offering practical guidance and demonstrating real-world scenarios.

    One of the key aspects covered is establishing seamless communication between Micro Frontends, ensuring smooth collaboration and integration within the architecture.
  spokenLanguage: en
  slideLanguage: en
  # sponsorIDs: [ xxx ]
  speakerIDs:
    - peter-eijgermans
# 9
- uuid: kian-jamali-1
  date: day1
  startsAt: "11:25"
  endsAt: "11:55"
  room: A
  # recordingUrl: ""
  title: "Trusted Types: DOM XSS Proteciton at Scale"
  titleJa: "Trusted Types: DOM XSS Proteciton at Scale"
  description: >-
    DOM XSS continues to be the most critical threat to web security. Our current best defense against DOM XSS is Trusted Types, a browser-based runtime feature to limit the uses of DOM APIs (and limit the possibility of DOM injection). We will discuss our approach to using Trusted Types at Google to protect billions of our users, the challenges of backporting Trusted Types compatibility to hundreds of webapps, and our approach to making the entire JS ecosystem safer with Trusted Types.
  descriptionJa: >-
    DOM XSS continues to be the most critical threat to web security. Our current best defense against DOM XSS is Trusted Types, a browser-based runtime feature to limit the uses of DOM APIs (and limit the possibility of DOM injection). We will discuss our approach to using Trusted Types at Google to protect billions of our users, the challenges of backporting Trusted Types compatibility to hundreds of webapps, and our approach to making the entire JS ecosystem safer with Trusted Types.
  spokenLanguage: en
  slideLanguage: en
  # sponsorIDs: [ xxx ]
  speakerIDs:
    - kian-jamali
# 10
- uuid: aileen-villanueva-lecuona-1
  date: day1
  startsAt: "13:00"
  endsAt: "13:30"
  room: A
  # recordingUrl: ""
  title: Machine learning with Javascript using Tensorflow.JS
  titleJa: Machine learning with Javascript using Tensorflow.JS
  description: >-
    Machine Learning helps give new ways of solving problems that are not possible with traditional computational approaches. However most of the available libraries are with R, Python or C++. According to Stackoverflow: 2022 marks JavaScript’s tenth year in a row as the most commonly used programming language. Tensorflow helps bring high-performance ML and attention to this vast community to continue the journey of solving problems with Javascript and Machine Learning.

    Participants will learn basics of AI and machine learning, how to train and deploy machine learning models and all machine learning capabilities available on a web browser and Node.js for server-side and back-end development with Tensorflow.js .
  descriptionJa: >-
    Machine Learning helps give new ways of solving problems that are not possible with traditional computational approaches. However most of the available libraries are with R, Python or C++. According to Stackoverflow: 2022 marks JavaScript’s tenth year in a row as the most commonly used programming language. Tensorflow helps bring high-performance ML and attention to this vast community to continue the journey of solving problems with Javascript and Machine Learning.

    Participants will learn basics of AI and machine learning, how to train and deploy machine learning models and all machine learning capabilities available on a web browser and Node.js for server-side and back-end development with Tensorflow.js .
  spokenLanguage: en
  slideLanguage: en
  # sponsorIDs: [ xxx ]
  speakerIDs:
    - aileen-villanueva-lecuona
# 11
- uuid: yamanoku-1
  date: day1
  startsAt: "19:10"
  endsAt: "19:20"
  room: A
  # recordingUrl: ""
  title: 画面遷移のアクセシビリティ課題を解決しうる Navigation API への期待
  titleJa: 画面遷移のアクセシビリティ課題を解決しうる Navigation API への期待
  description: >-
    クライアントサイドルーティングにおける画面遷移したことを支援技術に伝えるために JS と WAI-ARIA を使用した Route Announcer という手法があります。これにより画面が変わったことを通知できますがそれ以外にも画面遷移で考慮しなければならないアクセシビリティの課題があります。それらの課題の紹介と Navigation API によってそれらが解消できそうな期待を仕様に沿って紹介します。
  descriptionJa: >-
    クライアントサイドルーティングにおける画面遷移したことを支援技術に伝えるために JS と WAI-ARIA を使用した Route Announcer という手法があります。これにより画面が変わったことを通知できますがそれ以外にも画面遷移で考慮しなければならないアクセシビリティの課題があります。それらの課題の紹介と Navigation API によってそれらが解消できそうな期待を仕様に沿って紹介します。
  spokenLanguage: ja
  slideLanguage: ja
  # sponsorIDs: [ xxx ]
  speakerIDs:
    - yamanoku
# 12
- uuid: himeno-kosei-1
  date: day1
  startsAt: "13:30"
  endsAt: "14:00"
  room: C
  # recordingUrl: ""
  title: TypeScriptで型定義を信頼しすぎず「信頼境界線」を設置した話
  titleJa: TypeScriptで型定義を信頼しすぎず「信頼境界線」を設置した話
  description: >-
    TypeScript は静的型付けを持つ言語なので、外部からの入力について CやC++、Goなどと同じぐらいの安全性があると思いがちです。その結果、「ユーザーからの入力」や「APIによるデータの送受信」「UI側での情報更新」などで型定義を信頼しすぎて、入力値の確認を怠っていませんか？

    HireRoo では型定義を信頼しすぎた結果、失敗してしまった事例がありました。その失敗事例では型定義だけでは防げない事象があり、サーバサイドはもちろん、クライアントサイドでもバリデーションを行う必要がありました。

    本登壇では、型安全な処理を実現するために必要な値の信頼できる区間「信頼境界線」を設置し、信頼できない区間からやってくるデータを入念にテスト出来るようにしたり、境界を明確化することで意思疎通が早くなった話など、実際に改善をおこなった事例を話します。
  descriptionJa: >-
    TypeScript は静的型付けを持つ言語なので、外部からの入力について CやC++、Goなどと同じぐらいの安全性があると思いがちです。その結果、「ユーザーからの入力」や「APIによるデータの送受信」「UI側での情報更新」などで型定義を信頼しすぎて、入力値の確認を怠っていませんか？

    HireRoo では型定義を信頼しすぎた結果、失敗してしまった事例がありました。その失敗事例では型定義だけでは防げない事象があり、サーバサイドはもちろん、クライアントサイドでもバリデーションを行う必要がありました。

    本登壇では、型安全な処理を実現するために必要な値の信頼できる区間「信頼境界線」を設置し、信頼できない区間からやってくるデータを入念にテスト出来るようにしたり、境界を明確化することで意思疎通が早くなった話など、実際に改善をおこなった事例を話します。
  spokenLanguage: ja
  slideLanguage: ja
  # sponsorIDs: [ xxx ]
  speakerIDs:
    - himeno-kosei
# 13
- uuid: takuto-wada-1
  date: day1
  startsAt: "19:00"
  endsAt: "19:10"
  room: A
  # recordingUrl: ""
  title: Second System Syndrome - the tale of power-assert
  titleJa: Second System Syndrome - the tale of power-assert
  description: >-
    自作 OSS プロダクト、特に power-assert の開発において典型的な「セカンドシステムシンドローム」に罹患しました。「セカンドシステムシンドローム」とは何か、どうやってそこからリカバリーするか、自分の体験をベースに説明します。あわせて、当日新しいバージョンをリリースする予定です。
  descriptionJa: >-
    自作 OSS プロダクト、特に power-assert の開発において典型的な「セカンドシステムシンドローム」に罹患しました。「セカンドシステムシンドローム」とは何か、どうやってそこからリカバリーするか、自分の体験をベースに説明します。あわせて、当日新しいバージョンをリリースする予定です。
  spokenLanguage: ja
  slideLanguage: ja
  # sponsorIDs: [ xxx ]
  speakerIDs:
    - takuto-wada
# 14
- uuid: luca-mugnaini-1
  date: day1
  startsAt: "19:20"
  endsAt: "19:30"
  room: A
  # recordingUrl: ""
  title: Hope is postponed disappointment
  titleJa: Hope is postponed disappointment
  description: >-
    The solution for the exception problem is not having exceptions. Throwing exceptions and hoping that someone will take care of them may lead to disappointment. A sound type system can help us build resilient web applications. In Rakuten, we use Elm to prevent runtime exceptions in the authentication system used by millions of users every day. A similar technique can be implemented in TypeScript too.
  descriptionJa: >-
    The solution for the exception problem is not having exceptions. Throwing exceptions and hoping that someone will take care of them may lead to disappointment. A sound type system can help us build resilient web applications. In Rakuten, we use Elm to prevent runtime exceptions in the authentication system used by millions of users every day. A similar technique can be implemented in TypeScript too.
  spokenLanguage: en
  slideLanguage: en
  # sponsorIDs: [ xxx ]
  speakerIDs:
    - luca-mugnaini
# 15
- uuid: baseballyama-1
  date: day1
  startsAt: "11:25"
  endsAt: "11:55"
  room: C
  # recordingUrl: ""
  title: TODO
  titleJa: LLM全盛時代の開発プラクティス
  description: >-
    TODO
  descriptionJa: >-
    2022年11月30日にOpenAI社からChatGPTが発表されて以降、LLM全盛時代に入ろうとしています。
    私は、LLMはソフトウェア開発に大きな変化をもたらすと考えています。

    私は株式会社Flyleでソフトウェアエンジニアをしています。私は直近半年以上、業務としてLLMに専念してきました。
    そして、既に自社製品にLLM (や機械学習) を組み込んだ機能をいくつもリリースしました。(今後も継続的にリリースします)

    その一方で、私はLLMを使用した開発チームの生産性向上にも注目しています。
    優秀な少人数のエンジニアチームが、LLMによってその能力を10倍エンハンスすることができたら、その企業の競争力が大きく高まることは想像に難くないと思います。

    このセッションでは実際にLLMを使用して生産性を向上するための技術を発表します。
    具体的なコンテンツは以下です。(最新の調査内容をお届けしたいのでコンテンツは更新される場合があります)

    1: LLMは "新人" だと考えるとわかりやすい
      (1) なぜ LLM は "新人" なのか
      (2) "コードレビュー" といった曖昧で複雑なタスクをLLMに依頼するのは現実的ではない
      (3) 「人間Aが実装 -> 人間Bがレビュー」という構造から「LLMが実装 -> 人間Aがレビュー」という構造をいかに作り出せるかがキーポイント
    2: LLMのサジェストを最大化するためには とにかく "統一感" が重要である
      (1) なぜ統一感が重要なのか
      (2) 統一感をもたらすための技術 (Prettier / ESLint / Stylelint / カスタムルールの実装)
    3: LLMによって技術選定に変化はあるか
      (1) LLMが学習済みの2021年9月以前に存在した技術を優先して使うべきか? (No)
    4: コーディングガイドを常に開いておこう
      (1) GitHub Copilot の仕組み
      (2) LLMでの使用を前提としたコーディングガイドの書き方
      (3) コーディングガイドを開いた時と開いていない時でサジェストにどのような違いがあるか
    5: (番外編) (経験を元に感じた) 製品にLLMを組み込む際のポイント
  spokenLanguage: ja
  slideLanguage: ja
  # sponsorIDs: [ xxx ]
  speakerIDs:
    - baseballyama
# 16
- uuid: poteboy-1
  date: day1
  startsAt: "19:30"
  endsAt: "19:40"
  room: A
  # recordingUrl: ""
  title: The Past and Future of Kuma UI
  titleJa: TODO
  description: >-
    I'm the creator of Kuma UI, a Japanese OSS that gained attention as one of the few CSS-in-JS libraries compatible with React Server Components. Discover the journey of how someone with no prior OSS experience built this zero-runtime UI component library, the story behind its creation, its evolution, and the future vision for Kuma UI.
  descriptionJa: >-
    TODO
  spokenLanguage: ja
  slideLanguage: ja
  # sponsorIDs: [ xxx ]
  speakerIDs:
    - poteboy
# 17
- uuid: yonatan-mevorach-1
  date: day1
  startsAt: "14:40"
  endsAt: "15:20"
  room: C
  # recordingUrl: ""
  title: Mastering Cryptography Fundamentals with Node's crypto module
  titleJa: TODO
  description: >-
    Do you know that meme of Homer Simpson trying to hide in the bushes? That's how I would feel when my coworkers would discuss asymmetric encryption, certificate signing, salting, and crazy-sounding acronyms like PBKDF2.
    After years of trying to ignore this problem, I finally decided to do something about it. But rather than digging into the subject via textbooks and pseudo-code, I decided to research the massive amount of functionality that is offered by Node.js' built-in `crypto` module. Then I worked my way backwards to understand what each function does, what underling security best-practice it's based on, and when it's appropriate to use it.
    So if you're like me then step out of the bushes, and join me in this talk to learn the fundamentals of protecting information in a practical way with Node.js
  descriptionJa: >-
    TODO
  spokenLanguage: en
  slideLanguage: en
  # sponsorIDs: [ xxx ]
  speakerIDs:
    - yonatan-mevorach
# 18
- uuid: ankur-datta-1
  date: day1
  startsAt: "17:10"
  endsAt: "17:40"
  room: A
  # recordingUrl: ""
  title: "React Server Components: The Back-end Killer?"
  titleJa: TODO
  description: >-
    React Server Components have emerged as a game-changing technology, revolutionizing how we build data-driven apps and challenging the traditional role of backend applications. This talk will explore how React Server Components are transforming the landscape by enabling front-end apps with persistent database connections. We will dive into the power of React Server Components, their seamless integration with back-ends, and the utilization of Prisma to streamline data access. Join me to discover how this combination of technologies can eliminate the need for traditional back-end architectures, paving the way for a new era of efficient and scalable web development.

    Table of Contents:

    1. Introduction
        - Brief overview of React Server Components and their impact on frontend development.
    2. Understanding Data-Driven Apps
        - Exploring the concept of data-driven apps and their requirements for persistent database connections.
    3. React Server Components: The New Paradigm
        - Deep dive into React Server Components and their ability to handle data-fetching, rendering, and state management on the front-end.
    4. The Back-end Killer: Implications for Backend Applications
        - Examining the impact of React Server Components on traditional backend architectures.
        - Demonstrating advantages such as reduced latency and simplified development workflows.
    5. Streamlining Data Access with Prisma
        - Introducing Prisma as a powerful tool for efficient data access and manipulation.
        - Exploring its integration with React Server Components for seamless database connections.
    6. Real-World Examples and Case Studies
        - Showcasing organizations that have embraced React Server Components and Prisma, highlighting their benefits and success stories.
    7. Challenges and Considerations
        - Discussing potential challenges and considerations when adopting React Server Components and Prisma.
    8. Future of Web Development: Efficient and Scalable
        - Reflecting on the potential of React Server Components and the elimination of traditional backend architectures.
    9. Conclusion
        - Recap of key points and takeaways from the talk.
  descriptionJa: >-
    TODO
  spokenLanguage: en
  slideLanguage: en
  # sponsorIDs: [ xxx ]
  speakerIDs:
    - ankur-datta
# 19
- uuid: vasilika-klimova-1
  date: day1
  startsAt: "16:40"
  endsAt: "16:40"
  room: A
  # recordingUrl: ""
  title: Let’s expand reality
  titleJa: TODO
  description: >-
    How long have we been watching movies about reality and how exciting it looks! You may not have noticed, but virtual reality is already in our lives, even our browsers. There are more and more ways to apply these technologies. Let's look at VR and AR and see how they look in real life. (This talk includes a lot of examples of using 3D in our life and an explanation of how it works using JavaScript)
  descriptionJa: >-
    TODO
  spokenLanguage: en
  slideLanguage: en
  # sponsorIDs: [ xxx ]
  speakerIDs:
    - vasilika-klimova
# 20
- uuid: yulia-startsev-1
  date: day1
  startsAt: "10:45"
  endsAt: "11:15"
  room:A
  # recordingUrl: ""
  title: "There and back again: A Journey of a JavaScript feature."
  titleJa: TODO
  description: >-
    How does an idea became part of the JavaScript language? Let’s follow a JavaScript feature from its initial specification to a complete implementation in the SpiderMonkey engine. You will learn about the standardization process, how to read the specification, and how to implement the feature yourself.

    Let’s live code the feature together!
  descriptionJa: >-
    TODO
  spokenLanguage: en
  slideLanguage: en
  # sponsorIDs: [ xxx ]
  speakerIDs:
    - yulia-startsev
# 21
- uuid: christoph-nakazawa-1
  date: day1
  startsAt: "13:30"
  endsAt: "14:00"
  room: A
  # recordingUrl: ""
  title: Game Development with JavaScript
  titleJa: TODO
  description: >-
    Let's dive into how to build video games with JavaScript! This talk will guide beginners through some of the options for building video games with JavaScript and discuss the tradeoffs between traditional game engines and brand new JavaScript engines.
  descriptionJa: >-
    TODO
  spokenLanguage: en
  slideLanguage: en
  # sponsorIDs: [ xxx ]
  speakerIDs:
    - christoph-nakazawa
#
# TODO: 重複しているので確認する
#
# 22
#- uuid: daiki-nishikawa-1
#  date: day1
#  startsAt: "11:25"
#  endsAt: "11:55"
#  room: B
#  # recordingUrl: ""
#  title: Deep dive into Biome
#  titleJa: TODO
#  description: >-
#    TODO
#  descriptionJa: >-
#    Biome は、Rome を fork して始まった Web 開発に必要なツールチェーンを開発するプロジェクトです。現在は、JavaScript、TypeScript、JSON の formatter や linter を提供しており、Vercel の新規プロダクトにも利用されています。
#
#    今回のトークでは、Biome の直近の開発体制やリリースを紹介しつつ、Rust で実装されている Biome の内部について詳しく解説します。コアコントリビューターの一人として、Rust でJavaScript に関するツールを作る面白さやコントリビュートを歓迎している雰囲気などを伝えられるトークをしたいと考えています。
#
#    現時点で具体的に考えている発表内容は次の通りです。
#
#    - Biome の直近の開発体制やリリースの紹介
#        プロジェクトの governace をベースに開発体制について紹介します。直近のリリースの紹介に加えて、コアチーム内で進行中の実装 (CSSのサポートなど) の近況についても紹介します。
#    - Biome の内部アーキテクチャの解説
#        内部で利用されている CST (Concrete Syntax Tree) の特徴などについて紹介します。構文木は Rust の LSP (rust-analyzer) の実装で利用されている rowan をベースとしたものになっており、この点にも触れながら紹介するつもりです。
#    - Biome での linter の実装例の紹介
#        linter の実装方法について、簡単なルールを例に具体的なコードを紹介しながら解説します。
#
#    ---
#
#    参考リンク
#
#    - Biome: https://biomejs.dev/
#    - Vercel のプロダクトで Biome が利用されているポスト：https://twitter.com/rauchg/status/1703177160943628660
#    - Governance: https://github.com/biomejs/biome/blob/main/GOVERNANCE.md
#    - Rowan: https://github.com/rust-analyzer/rowan
#  spokenLanguage: ja
#  slideLanguage: ja
#  # sponsorIDs: [ xxx ]
#  speakerIDs:
#    - daiki-nishikawa

# 23
- uuid: wakamsha-1
  date: day1
  startsAt: "13:30"
  endsAt: "14:00"
  room: B
  # recordingUrl: ""
  title: TODO
  titleJa: フロントエンドリアーキテクトとプロダクト開始チームのスキルトランスファーにおける9ヶ月間の奮闘記
  description: >-
    TODO
  descriptionJa: >-
    2023.1 から 2023.9 にかけて某 toB web アプリのリアーキテクトプロジェクトにフロントエンドのシステムアーキテクトとして参画し、技術選定から開発メンバーの育成、果ては包括的な開発プロセスの改善までと幅広く支援してきました（2023.6 現在も進行中）。そこでの奮闘で得られた学びと新たに浮き彫りとなった課題についてご紹介します。
  spokenLanguage: ja
  slideLanguage: ja
  # sponsorIDs: [ xxx ]
  speakerIDs:
    - wakamsha
# 24
- uuid: hajime-mugishima-1
  date: day1
  startsAt: "14:40"
  endsAt: "15:20"
  room: B
  # recordingUrl: ""
  title: TODO
  titleJa: Next.js App Router でのMPAフロントエンド刷新
  description: >-
    TODO
  descriptionJa: >-
    現在フロントエンド領域では React Server Components とそれを利用する Next.js App Router が登場し、根底となるアプリケーション設計にも大きく影響を与えています。技術選定やマイグレーションの面でも悩みの多い過渡期を迎えていると思います。

    そんな中、サイボウズで提供するプロダクト「サイボウズOffice」では、Next.js App Router を採用したフロントエンドの基盤刷新に取り組んでおり、すでに数画面のリリースを完了しています。

    Next.js App Routerによって大きく変わったキャッシュ・テスト・エラーハンドリング・Server Actionsなどについて実際に現場で採用して得られた知見や課題に加え、認証を伴うMPAからの刷新の視点でNext.js App Routerがどのように扱えるかなどをご紹介します。
  spokenLanguage: ja
  slideLanguage: ja
  # sponsorIDs: [ xxx ]
  speakerIDs:
    - hajime-mugishima
# 25
- uuid: sosuke-suzuki-1
  date: day1
  startsAt: "15:30"
  endsAt: "16:00"
  room: B
  # recordingUrl: ""
  title: TODO
  titleJa: 書いたJavaScriptがそのままブラウザで動く未来へ
  escription: >-
    TODO
  descriptionJa: >-
    リッチな体験を提供するフロントエンドアプリケーションを構築するとき、どのような技術を使いますか？今日では、Next.js や Nuxt.js や SvelteKit などの数多くの選択肢があります。これらの技術は、開発者体験の向上や、プロダクトのデリバリーの加速、ユーザー体験の改善など、多くのメリットをもたらしてくれます。

    このような、いわゆるモダンなフレームワークたちの裏側には、TypeScriptやJSXや独自のテンプレート記法からJavaScriptへと変換を行う機能が隠れています。これらの機能によって、静的型に守られたプログラミングや、直感的なUIの記述が実現されています。

    でも、思い出してください。実はJavaScriptは高級なプログラミング言語です。明らかに、人間のための機能がたくさんありますよね？しかし、それでは十分でないから、私たちはJavaScriptをコンパイルターゲットとして扱っているわけです。
  spokenLanguage: ja
  slideLanguage: ja
  # sponsorIDs: [ xxx ]
  speakerIDs:
    - sosuke-suzuki
# 26
- uuid: yusuke-wada-1
  date: day1
  startsAt: "15:30"
  endsAt: "16:00"
  room: C
  # recordingUrl: ""
  title: Hono v3 and v4
  titleJa: TODO
  description: >-
    TODO
  descriptionJa: >-
    Webフレームワーク「Hono」の v3は今年2月にリリースされ、現在までに新しい機能が導入されています。

    型にこだわったValidator、革新的なRPCモード、新しいルーターの追加とプリセット、ホスト名によるルーティングの対応、Server-Timingミドルウェア、Secure Headersミドルウェア、Zodでスキーマを書くOpenAPI拡張、SSRをよりしやすくするc.render()、そして、ストリーミングのためのc.stream()。また、Node.jsアダプタもメジャーリリースとなり、サポートするプラットフォームはAWSも含め10種類以上となりました。

    本トークではこれまであまり語られることのなかったHonoの最近のアップデートについて話します。また、次に予定されているv4への展望についても紹介します。
  spokenLanguage: ja
  slideLanguage: ja
  # sponsorIDs: [ xxx ]
  speakerIDs:
    - yusuke-wada
# 27
- uuid: masaki-suzuki-1
  date: day1
  startsAt: "16:00"
  endsAt: "16:30"
  room: B
  # recordingUrl: ""
  title: TODO
  titleJa: Bunがメジャーリリースされたけど、本当にBunはNode.jsに取って代るほどすごいのか？をAWS Lambdaで検証してみた
  description: >-
    TODO
  descriptionJa: >-
    概要：
    今年の9月上旬に、Bunが正式にメジャーリリースされました。
    Bunは今までTypeScriptの開発で難解だった点をすべてこれ一つで解決でき、そして何よりNode.jsに比べてとにかく高速であることが売りであり、一部のブログやYouTubeでは「Node.jsの終焉」「Node.jsはオワコン」とまで言われています。

    しかし、本当にそうなのでしょうか？

    そこで、今回はAWS Lambdaを使用して、実際にWeb APIとしてBunとNode.jsを使用した際の結果を比較し、本当にNode.jsはBunによって終わってしまうのか、BunはNode.jsの代替になるのかをAWS Lambdaの観点で説明したいと思います。

    その他、AWS LambdaでBunを使用する方法、およびその際の注意点、そして実際の開発でのユースケースなどを自分が使ってみた経験から説明したいと思います。
  spokenLanguage: ja
  slideLanguage: ja
  # sponsorIDs: [ xxx ]
  speakerIDs:
    - masaki-suzuki
# 28
- uuid: canalun-1
  date: day1
  startsAt: "16:00"
  endsAt: "16:30"
  room: C
  # recordingUrl: ""
  title: TODO
  titleJa: ゲーム「webページ崩し」の仕組み〜あなたの知らないDOMスクリプティングの世界〜
  description: >-

  descriptionJa: >-
    一昔前の技術だと思われがちなDOMスクリプティング(DOMをブラウザのAPIで直接操作するプログラミング)は、PlaywrightやReactといったモダンなフロントエンドスタックを支える現役の重要な技術です。

    本セッションでは、まさにブロック崩しのように、webページ上の要素にボールを当てて消していくゲーム「webページ崩し」(実際の動画: https://x.com/i_am_canalun/status/1707700748610629911) の実装に関する説明を通じて、実践的かつ高度なDOMスクリプティングについて取り扱います。

    特に、下記の技術的詳細にスポットライトを当てながら、Playwrightが採用する要素探索の手法や、去年から一部のブラウザでサポートされた比較的最新のAPIなどなど、奥深くて興味深いDOMスクリプティングの世界にご案内いたします。

    - Shadow DOMやiframeの中にある要素への当たり判定の実装
    - visibilityやopacityだけでは実現できない、「要素がユーザーにとって見えているか」の判定
    - ページレイアウトを極力保ちつつ外側の要素(DOMツリーの親要素)から順に消していく方法

    そして何より「DOMってこんなに面白いんだ！」と思って頂ければ、これ以上のことはありません。
  spokenLanguage: ja
  slideLanguage: ja
  # sponsorIDs: [ xxx ]
  speakerIDs:
    - canalun
# 29
- uuid: koji-ota-1
  date: day1
  startsAt: "16:40"
  endsAt: "17:10"
  room: B
  # recordingUrl: ""
  title: TODO
  titleJa: PrivacySandboxAPIを使ったブラウザ上での広告オークションについて
  description: >-
    TODO
  descriptionJa: >-
    多くのブラウザで廃止されつつある3rd party cookieが担っていたユースケースを実現するためにPrivacySandboxというAPI群が実装されています。中でもweb広告のユースケースを実現するために、webブラウザ上で広告オーディションを実行するProtectedAudienceAPIという仕様があります。ブラウザ上での広告オークションの実行はユーザーのPrivacy情報を漏らさないようにauction workletという特殊な環境で実行されますが、auction workletの制約に加えてユーザーのWeb閲覧を妨げない高速なオークションロジックの実行も求められます。

    本発表ではauction workletが持つ制約のポイントや、auction worklet環境下で開発/テストを行い、高速にオークションを実行するための方法について説明いたします。
  spokenLanguage: ja
  slideLanguage: ja
  # sponsorIDs: [ xxx ]
  speakerIDs:
    - koji-ota
# 30
- uuid: kkeeth-1
  date: day1
  startsAt: "16:40"
  endsAt: "17:10"
  room: C
  # recordingUrl: ""
  title: Visually experience the beauty of mathematics with p5.js
  titleJa: TODO
  description: >-
    There are also many books and videos out there that talk about the fun and beauty of mathematics, but have you ever felt its beauty? In this talk, I would like to approach this beauty visually in the context of art!
  descriptionJa: >-
    TODO
  spokenLanguage: ja
  slideLanguage: ja
  # sponsorIDs: [ xxx ]
  speakerIDs:
    - kkeeth
# 31
- uuid: kateryna-porshnieva-1
  date: day1
  startsAt: "17:10"
  endsAt: "17:40"
  room: C
  # recordingUrl: ""
  title: Practical guide to building accessible forms in React
  titleJa: TODO
  description: >-
    Web forms are crucial for user interaction on the web, and to ensure our products provide an inclusive experience for all, we need to build them with accessibility in mind. In this talk, we'll dive into best practices and practical tips for crafting accessible forms that won't leave anyone behind

    We’ll start by diving into what accessibility is and how assistive technology works on the web. With this foundation, we’ll go through common patterns in forms and how to implement them accessibly. We’ll talk about: labelling, providing instructions, errors and validation, testing, managing focus, and more – all backed by practical examples.

    ---------------

    I added more info on this page about the outline and links to other talks I have given in the past:

    https://krambertech.notion.site/Kateryna-s-Talk-for-JSConf-JP-3c5215aa64b84efd8e33e52dc9bea147?pvs=4
  descriptionJa: >-
    TODO
  spokenLanguage: en
  slideLanguage: en
  # sponsorIDs: [ xxx ]
  speakerIDs:
    - kateryna-porshnieva
# 32
- uuid: azukiazusa-1
  date: day1
  startsAt: "19:40"
  endsAt: "19:50"
  room: A
  # recordingUrl: ""
  title: TODO
  titleJa: JavaScript なしで動作するモダンなコードの書き方
  description: >-
    TODO
  descriptionJa: >-
    Next.js、Remix、SvelteKit といった近年のフレームワークは、JavaScript がなくても動作することを一つの価値として提供しています。

    例えばSvelteKit のフォームではプログレッシブエンハンスメントとして、JavaScript が利用できる環境ではリッチなユーザー体験を提供しつつ、JavaScript が使えない環境においては HTML のフォームとして振る舞うことでアプリケーションの機能を変わらず提供できます。
    React Server Component はサーバー側で HTML に変換されるため、クライアントに JavaScript のコードが配信されることはありません。React Server Component では `useState()` を使用できないといった制約がありますので、我々開発者は React Server Component の利点を十分に発揮するために、JavaScript を用いた状態管理を行う範囲を狭めることが求められています。

    このトークでは、CSS の :has() セレクターや、Popover API といった、従来は JavaScript を用いなければ提供できなかった機能を代替する方法を紹介します。
  spokenLanguage: ja
  slideLanguage: ja
  # sponsorIDs: [ xxx ]
  speakerIDs:
    - azukiazusa
# 33
- uuid: josh-goldberg-1
  date: day1
  startsAt: "15:30"
  endsAt: "16:00"
  room: A
  # recordingUrl: ""
  title: "Static Analysis: Shockingly Awesome! ⚡️"
  titleJa: TODO
  description: >-
    Wouldn’t you love to automatically zap code bugs before releasing to production? How about before your code even gets run? Static analysis tools scrutinize your code as you write it - giving you blazing fast feedback at development time. We’re going to go into how that works, why it’s useful, and -best of all- how to enable the best configurations for ESLint, TypeScript, and their associated tooling in your app.

    In particular, we'll cover:
    * The tooling differences between formatters, linters, and type checkers
    * How to appropriately set up each of those tools for local development and CI/builds
    * A brief overview of using recommended rulesets from ESLint and TypeScript-ESLint -- and why you'd want to
    * The kinds of development-time issues each of those tools catch
    * Using ESLint and TypeScript as documentation sources and to educate developers on best practices
    * Demos of the -often surprisingly intricate- well-crafted static analysis tools can catch in your code

    A primary goal of the talk is to get the audience excited about the tooling they can run on their code. This talk will have you detecting bugs, bad practices, and code smells in your web apps at lightning speed! ⚡️
  descriptionJa: >-
    TODO
  spokenLanguage: ja
  slideLanguage: ja
  # sponsorIDs: [ xxx ]
  speakerIDs:
    - josh-goldberg


#
# 開場
#
- uuid: open
  date: day1
  startsAt: "10:00"
  endsAt: "10:30"
  room: A
  # recordingUrl: xxx
  title: open
  titleJa: open

# オープニング
- uuid: opening-talk
  date: day1
  startsAt: "10:30"
  endsAt: "10:45"
  room: A
  # recordingUrl: xxx
  title: Opening talk by Yosuke Furukawa
  titleJa: オープニング by Yosuke Furukawa

# 休憩1
- uuid: "day1-break-1115-1125"
  date: day1
  startsAt: "11:15"
  endsAt: "11:25"
  room: A
  title: Break
  titleJa: 休憩
# 休憩2
- uuid: "day1-break-1155-1300"
  date: day1
  startsAt: "11:55"
  endsAt: "13:00"
  room: A
  title: Break
  titleJa: 休憩
# 休憩3
- uuid: "day1-break-1400-1410"
  date: day1
  startsAt: "14:00"
  endsAt: "14:10"
  room: A
  title: Break
  titleJa: 休憩
# 休憩4
- uuid: "day1-break-1520-1530"
  date: day1
  startsAt: "15:20"
  endsAt: "15:30"
  room: A
  title: Break
  titleJa: 休憩
# 休憩5
- uuid: "day1-break-1630-1640"
  date: day1
  startsAt: "16:30"
  endsAt: "16:40"
  room: A
  title: Break
  titleJa: 休憩
# 休憩6
- uuid: "day1-break-1740-1750"
  date: day1
  startsAt: "17:40"
  endsAt: "17:50"
  room: A
  title: Break
  titleJa: 休憩
# 休憩7
- uuid: "day1-break-1850-1900"
  date: day1
  startsAt: "18:50"
  endsAt: "19:00"
  room: A
  title: Break
  titleJa: 休憩

# クロージング
- uuid: closing-talk
  date: day1
  startsAt: "19:50"
  endsAt: "20:00"
  room: A
  # recordingUrl: xxx
  title: Closing
  titleJa: クロージング

# 懇親会
- uuid: drink-party
  date: day1
  startsAt: "20:00"
  endsAt: "22:00"
  room: A
  title: Drink Party
  titleJa: 懇親会
